//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.02.01 at 08:28:22 PM YEKT 
//


package kte_labs_soap_web_service;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for specialization.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="specialization"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="dentist"/&gt;
 *     &lt;enumeration value="surgeon"/&gt;
 *     &lt;enumeration value="urologist"/&gt;
 *     &lt;enumeration value="neurologist"/&gt;
 *     &lt;enumeration value="psychiatrist"/&gt;
 *     &lt;enumeration value="otolaryngologist"/&gt;
 *     &lt;enumeration value="dermatologist"/&gt;
 *     &lt;enumeration value="cardiologist"/&gt;
 *     &lt;enumeration value="endocrinologist"/&gt;
 *     &lt;enumeration value="oncologist"/&gt;
 *     &lt;enumeration value="rheumatologist"/&gt;
 *     &lt;enumeration value="pediatrician"/&gt;
 *     &lt;enumeration value="podiatrist"/&gt;
 *     &lt;enumeration value="ophthalmologist"/&gt;
 *     &lt;enumeration value="radiologist"/&gt;
 *     &lt;enumeration value="gynecologist"/&gt;
 *     &lt;enumeration value="allergist"/&gt;
 *     &lt;enumeration value="neurosurgeon"/&gt;
 *     &lt;enumeration value="physician"/&gt;
 *     &lt;enumeration value="gastroenterologist"/&gt;
 *     &lt;enumeration value="immunologist"/&gt;
 *     &lt;enumeration value="pulmonologist"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "specialization")
@XmlEnum
public enum Specialization {

    @XmlEnumValue("dentist")
    DENTIST("dentist"),
    @XmlEnumValue("surgeon")
    SURGEON("surgeon"),
    @XmlEnumValue("urologist")
    UROLOGIST("urologist"),
    @XmlEnumValue("neurologist")
    NEUROLOGIST("neurologist"),
    @XmlEnumValue("psychiatrist")
    PSYCHIATRIST("psychiatrist"),
    @XmlEnumValue("otolaryngologist")
    OTOLARYNGOLOGIST("otolaryngologist"),
    @XmlEnumValue("dermatologist")
    DERMATOLOGIST("dermatologist"),
    @XmlEnumValue("cardiologist")
    CARDIOLOGIST("cardiologist"),
    @XmlEnumValue("endocrinologist")
    ENDOCRINOLOGIST("endocrinologist"),
    @XmlEnumValue("oncologist")
    ONCOLOGIST("oncologist"),
    @XmlEnumValue("rheumatologist")
    RHEUMATOLOGIST("rheumatologist"),
    @XmlEnumValue("pediatrician")
    PEDIATRICIAN("pediatrician"),
    @XmlEnumValue("podiatrist")
    PODIATRIST("podiatrist"),
    @XmlEnumValue("ophthalmologist")
    OPHTHALMOLOGIST("ophthalmologist"),
    @XmlEnumValue("radiologist")
    RADIOLOGIST("radiologist"),
    @XmlEnumValue("gynecologist")
    GYNECOLOGIST("gynecologist"),
    @XmlEnumValue("allergist")
    ALLERGIST("allergist"),
    @XmlEnumValue("neurosurgeon")
    NEUROSURGEON("neurosurgeon"),
    @XmlEnumValue("physician")
    PHYSICIAN("physician"),
    @XmlEnumValue("gastroenterologist")
    GASTROENTEROLOGIST("gastroenterologist"),
    @XmlEnumValue("immunologist")
    IMMUNOLOGIST("immunologist"),
    @XmlEnumValue("pulmonologist")
    PULMONOLOGIST("pulmonologist");
    private final String value;

    Specialization(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Specialization fromValue(String v) {
        for (Specialization c: Specialization.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
