drop table if exists doctors, patients, comments, schedules;

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE IF NOT EXISTS doctors (
    id              BIGINT          GENERATED BY DEFAULT AS IDENTITY,
    uuid            VARCHAR(36)     DEFAULT uuid_generate_v4(),
    name            VARCHAR(100)    NOT NULL,
    description     VARCHAR(1000)   NOT NULL,
    specialization  VARCHAR(20)     NOT NULL,
    photo_url       VARCHAR(250)    NOT NULL,

    CONSTRAINT pk_doctors PRIMARY KEY (id),
    CONSTRAINT uq_doctors__uuid UNIQUE (uuid),
    CONSTRAINT uq_doctors__name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS patients (
    id              BIGINT          GENERATED BY DEFAULT AS IDENTITY,
    uuid            VARCHAR(36)     DEFAULT uuid_generate_v4(),
    name            VARCHAR(100)    NOT NULL,
    email           VARCHAR(20)     NOT NULL,
    phone           VARCHAR(11)     NOT NULL,
    birthday        DATE            NOT NULL,
    photo_url       VARCHAR(250)    NOT NULL,

    CONSTRAINT pk_patients PRIMARY KEY (id),
    CONSTRAINT uq_patients__uuid UNIQUE (uuid),
    CONSTRAINT uq_patients__email UNIQUE (email),
    CONSTRAINT uq_patients__phone UNIQUE (phone)
);

CREATE TABLE IF NOT EXISTS comments (
    id              BIGINT                          GENERATED BY DEFAULT AS IDENTITY,
    text            VARCHAR(512)                    NOT NULL,
    grade           BIGINT                          NOT NULL,
    doctor_id       BIGINT                          NOT NULL,
    patient_id      BIGINT                          NOT NULL,
    created         TIMESTAMP WITHOUT TIME ZONE     NOT NULL,
    status          VARCHAR(10)                     NOT NULL,

    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT doctors_comments FOREIGN KEY (doctor_id) REFERENCES doctors (id),
    CONSTRAINT patients_comments FOREIGN KEY (patient_id) REFERENCES patients (id)
);

CREATE TABLE IF NOT EXISTS schedules (
    id              BIGINT                          GENERATED BY DEFAULT AS IDENTITY,
    doctor_id       BIGINT                          NOT NULL,
    patient_id      BIGINT,
    recording_time  TIMESTAMP WITHOUT TIME ZONE     NOT NULL,
    is_successful   BOOLEAN,

    CONSTRAINT pk_schedules PRIMARY KEY (id),
    CONSTRAINT doctors_schedules FOREIGN KEY (doctor_id) REFERENCES doctors (id),
    CONSTRAINT patients_schedules FOREIGN KEY (patient_id) REFERENCES patients (id)
);